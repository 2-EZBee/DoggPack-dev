# Foundation Infrastructure Deployment Plan\n\nmetadata:\n  name: \"foundation-infrastructure\"\n  version: \"1.0.0\"\n  created_date: \"2025-08-02\"\n  created_by: \"CDTZ\"\n  status: \"active\"\n  risk_level: \"medium\"\n  estimated_duration: \"45 minutes\"\n\ndescription:\n  overview: \"Deploy the foundational GitHub-orchestrated, MCP-ready infrastructure that enables AI-coordinated deployments across the DoggPack ecosystem\"\n  scope: \"Docker Swarm, isolated development environments, GitHub coordination, and MCP preparation\"\n  business_value: \"Enables natural language infrastructure management and coordinated AI deployments through GitHub Actions bootstrap\"\n  success_criteria:\n    - \"CDTZ can orchestrate deployments through GitHub Actions\"\n    - \"CCN and CCW can execute tasks via GitHub coordination\"\n    - \"Isolated development environments are functional\"\n    - \"External API access works from containers\"\n    - \"Foundation ready for MCP server deployment\"\n\nenvironment:\n  target_machines:\n    - name: \"nucdogg\"\n      role: \"coordination hub and core services\"\n      resources_required:\n        cpu: \"4 cores\"\n        memory: \"8GB\"\n        disk: \"50GB\"\n    - name: \"workdogg\"\n      role: \"development workloads and processing\"\n      resources_required:\n        cpu: \"4 cores\"\n        memory: \"8GB\"\n        disk: \"50GB\"\n  \n  networks:\n    - name: \"dogpack_swarm_net\"\n      type: \"overlay\"\n      purpose: \"Docker Swarm communication\"\n    - name: \"isolated_dev_net\"\n      type: \"bridge\"\n      purpose: \"Development environment isolation\"\n    - name: \"coordination_net\"\n      type: \"bridge\"\n      purpose: \"GitHub task coordination\"\n\nprerequisites:\n  system_requirements:\n    - \"Fresh Ubuntu 22.04 LTS on both machines\"\n    - \"Docker installed and configured\"\n    - \"Claude Code installed on both machines\"\n    - \"GitHub repository access configured\"\n    - \"SSH connectivity between machines\"\n    - \"8GB+ available RAM on each machine\"\n    - \"50GB+ available disk space\"\n    - \"Internet connectivity for GitHub API access\"\n  \n  dependencies: []  # This is the foundational deployment\n  \n  timeshift_snapshots:\n    - machine: \"nucdogg\"\n      snapshot_name: \"pre-foundation-deployment-$(date +%Y%m%d-%H%M%S)\"\n    - machine: \"workdogg\"\n      snapshot_name: \"pre-foundation-deployment-$(date +%Y%m%d-%H%M%S)\"\n\ncoordination:\n  planning_instance: \"CDTZ\"\n  execution_instances:\n    - \"CCN\"\n    - \"CCW\"\n  \n  communication_method: \"github-actions-orchestration\"\n  state_sharing: \"github-issues-and-repository-dispatch\"\n  \n  checkpoint_intervals: \"after each service deployment\"\n  failure_escalation: \"halt deployment, update GitHub issue, preserve state for debugging\"\n\ndeployment_steps:\n  - name: \"trigger_github_deployment\"\n    assigned_to: \"CDTZ\"\n    description: \"Trigger foundation deployment through GitHub Actions workflow\"\n    estimated_duration: \"2 minutes\"\n    dependencies: []\n    github_coordination:\n      workflow: \"foundation-deployment.yml\"\n      trigger_method: \"workflow_dispatch\"\n    validation:\n      - \"GitHub Actions workflow started successfully\"\n      - \"Deployment issue created and tracked\"\n      - \"CCN and CCW notified via repository dispatch\"\n    rollback_actions:\n      - \"Cancel GitHub Actions workflow\"\n      - \"Close deployment tracking issue\"\n  \n  - name: \"create_timeshift_snapshots\"\n    assigned_to: \"CCN,CCW\"\n    description: \"Create system snapshots before deployment begins\"\n    estimated_duration: \"5 minutes\"\n    dependencies: [\"trigger_github_deployment\"]\n    github_coordination:\n      trigger_event: \"ccn-deployment-task,ccw-deployment-task\"\n      task_name: \"create_timeshift_snapshots\"\n    validation:\n      - \"Timeshift snapshot created on NucDogg\"\n      - \"Timeshift snapshot created on WorkDogg\"\n      - \"Snapshot IDs reported to GitHub issue\"\n    rollback_actions:\n      - \"Snapshots available for emergency rollback\"\n  \n  - name: \"initialize_docker_swarm\"\n    assigned_to: \"CCN\"\n    description: \"Initialize Docker Swarm with NucDogg as manager, WorkDogg as worker\"\n    estimated_duration: \"5 minutes\"\n    dependencies: [\"create_timeshift_snapshots\"]\n    github_coordination:\n      trigger_event: \"ccn-deployment-task\"\n      task_name: \"initialize_docker_swarm\"\n    validation:\n      - \"Docker Swarm initialized successfully on NucDogg\"\n      - \"Join token generated and shared via GitHub issue\"\n      - \"WorkDogg joined swarm as worker node\"\n      - \"Swarm status shows 2 nodes ready\"\n    rollback_actions:\n      - \"Leave swarm on WorkDogg\"\n      - \"Leave swarm on NucDogg\"\n  \n  - name: \"create_foundation_networks\"\n    assigned_to: \"CCN\"\n    description: \"Create Docker networks for service communication\"\n    estimated_duration: \"3 minutes\"\n    dependencies: [\"initialize_docker_swarm\"]\n    github_coordination:\n      trigger_event: \"ccn-deployment-task\"\n      task_name: \"create_foundation_networks\"\n    validation:\n      - \"dogpack_swarm_net overlay network created\"\n      - \"isolated_dev_net bridge network created\"\n      - \"coordination_net bridge network created\"\n      - \"Networks accessible from both nodes\"\n    rollback_actions:\n      - \"Remove created networks\"\n  \n  - name: \"setup_github_task_listeners\"\n    assigned_to: \"CCN,CCW\"\n    description: \"Deploy and start GitHub task listener services\"\n    estimated_duration: \"8 minutes\"\n    dependencies: [\"create_foundation_networks\"]\n    github_coordination:\n      trigger_event: \"ccn-deployment-task,ccw-deployment-task\"\n      task_name: \"setup_github_task_listeners\"\n    validation:\n      - \"CCN task listener service running\"\n      - \"CCW task listener service running\"\n      - \"Task listeners responding to test dispatch events\"\n      - \"GitHub API connectivity confirmed\"\n    rollback_actions:\n      - \"Stop and remove task listener services\"\n      - \"Clean up listener configurations\"\n  \n  - name: \"deploy_isolated_dev_environments\"\n    assigned_to: \"CCW\"\n    description: \"Deploy isolated development containers for both Claude instances\"\n    estimated_duration: \"12 minutes\"\n    dependencies: [\"setup_github_task_listeners\"]\n    github_coordination:\n      trigger_event: \"ccw-deployment-task\"\n      task_name: \"deploy_isolated_dev_environments\"\n    validation:\n      - \"CCN development container running on NucDogg\"\n      - \"CCW development container running on WorkDogg\"\n      - \"SSH access to both containers working\"\n      - \"Docker socket access from containers functional\"\n      - \"Claude Code installed in both containers\"\n    rollback_actions:\n      - \"Stop and remove development containers\"\n      - \"Remove development volumes\"\n  \n  - name: \"configure_external_api_access\"\n    assigned_to: \"CCN\"\n    description: \"Set up API gateway for external service access from containers\"\n    estimated_duration: \"10 minutes\"\n    dependencies: [\"deploy_isolated_dev_environments\"]\n    github_coordination:\n      trigger_event: \"ccn-deployment-task\"\n      task_name: \"configure_external_api_access\"\n    validation:\n      - \"API gateway container deployed\"\n      - \"Asana API proxy functional\"\n      - \"GitHub API proxy functional\"\n      - \"External API access from dev containers working\"\n    rollback_actions:\n      - \"Stop and remove API gateway\"\n      - \"Revert external access configurations\"\n  \n  - name: \"validate_github_coordination\"\n    assigned_to: \"CDTZ\"\n    description: \"Validate end-to-end GitHub-orchestrated coordination\"\n    estimated_duration: \"8 minutes\"\n    dependencies: [\"configure_external_api_access\"]\n    github_coordination:\n      trigger_method: \"github-actions-monitoring\"\n      validation_workflow: \"test-coordination\"\n    validation:\n      - \"CDTZ can trigger tasks via GitHub Actions\"\n      - \"CCN and CCW receive and execute tasks\"\n      - \"Progress tracking through GitHub issues works\"\n      - \"External API calls successful from isolated environments\"\n      - \"All coordination mechanisms functional\"\n    rollback_actions:\n      - \"Document coordination failures for debugging\"\n      - \"Preserve environment for troubleshooting\"\n\nexternal_integrations:\n  github:\n    required: true\n    access_method: \"github-actions-native\"\n    validation:\n      - \"Can trigger workflows from CDTZ\"\n      - \"Repository dispatch events work\"\n      - \"Issue creation and commenting functional\"\n  \n  asana:\n    required: true\n    access_method: \"api-gateway-proxy\"\n    validation:\n      - \"Can list projects through proxy\"\n      - \"Can create test tasks\"\n  \n  anthropic:\n    required: false\n    access_method: \"existing-claude-subscriptions\"\n    validation:\n      - \"Claude Code instances have API access\"\n      - \"No additional API costs incurred\"\n\nmonitoring:\n  health_checks:\n    - endpoint: \"http://nucdogg:8200/health\"\n      service: \"api-gateway\"\n      expected_status: 200\n      check_interval: \"30 seconds\"\n    - command: \"docker node ls\"\n      service: \"docker-swarm\"\n      expected_output: \"2 nodes Ready\"\n      check_interval: \"60 seconds\"\n  \n  metrics_collection:\n    - system_cpu_usage\n    - system_memory_usage\n    - container_count_and_status\n    - github_api_rate_limits\n    - external_api_response_times\n  \n  alerting:\n    failure_threshold: \"2 consecutive health check failures\"\n    notification_method: \"github-issue-comments\"\n\nrollback_plan:\n  trigger_conditions:\n    - \"Any development environment fails to deploy\"\n    - \"GitHub coordination mechanisms fail\"\n    - \"External API access fails validation\"\n    - \"Docker Swarm becomes unstable\"\n    - \"Manual rollback requested via GitHub comment: '/rollback'\"\n  \n  rollback_steps:\n    - name: \"stop_all_services\"\n      description: \"Stop all deployed services and containers\"\n      estimated_duration: \"5 minutes\"\n      assigned_to: \"CCN,CCW\"\n    \n    - name: \"clean_docker_resources\"\n      description: \"Remove services, networks, volumes\"\n      estimated_duration: \"5 minutes\"\n      assigned_to: \"CCN\"\n    \n    - name: \"restore_timeshift_snapshots\"\n      description: \"Restore both machines from pre-deployment snapshots\"\n      estimated_duration: \"20 minutes\"\n      assigned_to: \"Manual intervention required\"\n    \n    - name: \"validate_clean_state\"\n      description: \"Ensure both machines are back to pre-deployment state\"\n      estimated_duration: \"5 minutes\"\n      assigned_to: \"CCN,CCW\"\n  \n  recovery_time_objective: \"35 minutes\"\n  data_loss_tolerance: \"none - snapshots preserve all previous state\"\n\ntesting_strategy:\n  pre_deployment:\n    - \"Validate GitHub Actions workflow syntax\"\n    - \"Check network connectivity between machines\"\n    - \"Verify Claude Code instances have GitHub access\"\n    - \"Confirm adequate resources on both machines\"\n    - \"Test Timeshift snapshot creation\"\n  \n  during_deployment:\n    - \"GitHub issue tracking for each step\"\n    - \"Task listener health monitoring\"\n    - \"Container deployment validation\"\n    - \"External API connectivity testing\"\n    - \"Resource usage monitoring\"\n  \n  post_deployment:\n    - \"Complete GitHub coordination workflow test\"\n    - \"External API integration testing\"\n    - \"Security verification (container isolation)\"\n    - \"Performance baseline measurement\"\n    - \"Documentation accuracy verification\"\n\ndocumentation_updates:\n  - file: \"README.md\"\n    changes: \"Update with foundation infrastructure access information and coordination patterns\"\n  - file: \"documentation/operations/github-coordination.md\"\n    changes: \"Document GitHub Actions coordination workflows and troubleshooting\"\n  - file: \"documentation/user-guides/development-environments.md\"\n    changes: \"Document isolated development environment access and usage\"\n  - file: \"planning/deployment-plans/completed/\"\n    changes: \"Move this plan to completed with execution results and lessons learned\"\n\nlessons_learned:\n  # To be filled in after deployment\n  what_worked_well: []\n  what_could_be_improved: []\n  unexpected_challenges: []\n  recommendations_for_future: []\n\napproval:\n  required_approvals:\n    - \"CDTZ architecture review completed\"\n    - \"Resource allocation confirmed on both machines\"\n    - \"Timeshift backup strategy verified\"\n    - \"GitHub repository and Actions configured\"\n    - \"External API credentials secured\"\n  \n  approved_by: \"\"\n  approved_date: \"\"\n  deployment_authorized: false\n\nexecution_log:\n  # To be filled in during deployment\n  github_workflow_run: \"\"\n  deployment_issue: \"\"\n  start_time: \"\"\n  end_time: \"\"\n  actual_duration: \"\"\n  steps_completed: []\n  issues_encountered: []\n  final_status: \"\"\n\nnext_planned_deployments:\n  - \"mcp-coordination-layer\"\n  - \"n8n-automation-stack\"\n  - \"enhanced-monitoring-observability\"\n  - \"knowledge-management-integration\"\n\n## Post-Deployment Access Information\n\nOnce this foundation is deployed, you'll have:\n\n### **GitHub Coordination**\n- **Workflow Triggers**: Available in Actions tab of repository\n- **Deployment Tracking**: Via GitHub issues with 'deployment' label\n- **Task Coordination**: Repository dispatch events to CCN/CCW\n- **Progress Monitoring**: Real-time updates through issue comments\n\n### **Development Environment Access**\n- **CCN Dev Container**: `ssh claude@nucdogg -p 2200`\n- **CCW Dev Container**: `ssh claude@workdogg -p 2201`\n- **Docker Access**: Full Docker capabilities within containers\n- **Claude Code**: Installed and configured in both containers\n\n### **External API Access** (from containers)\n- **Asana**: `http://api-gateway:8200/api/asana/`\n- **GitHub**: Native access through GitHub MCP\n- **Google Services**: Via future MCP server deployment\n\n### **Management Interfaces**\n- **Docker Swarm**: `docker node ls` (from NucDogg)\n- **Service Status**: `docker service ls` (from NucDogg)\n- **Container Access**: `docker exec -it <container> bash`\n\nThis foundation enables all future AI-coordinated deployments through the GitHub Actions coordination layer!"